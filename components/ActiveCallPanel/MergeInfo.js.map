{"version":3,"sources":["components/ActiveCallPanel/MergeInfo.js"],"names":["MergeInfo","props","state","lastCallAvatar","mounted","lastCallInfo","getAvatarUrl","avatarUrl","lastCallContact","then","setState","currentLocale","timeCounter","currentCallTitle","currentCallAvatarUrl","formatPhone","isLastCallEnded","status","sessionStatus","finished","statusClasses","styles","callee_status","callee_status_disconnected","isOnConferenCall","calleeType","calleeTypes","conference","isContacts","contacts","calleeName","name","phoneNumber","mergeInfo","merge_item","callee_avatar","extraNum","callee_name","i18n","getString","merge_item_active","callee_avatar_active","callee_name_active","callee_status_active","Component","propTypes","PropTypes","string","isRequired","element","object","func","defaultProps","unknow","undefined"],"mappings":"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","file":"MergeInfo.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport sessionStatus from 'ringcentral-integration/modules/Webphone/sessionStatus';\nimport calleeTypes from 'ringcentral-integration/enums/calleeTypes';\nimport styles from './styles.scss';\nimport i18n from './i18n';\nimport CallAvatar from '../CallAvatar';\n\nclass MergeInfo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lastCallAvatar: null,\n    };\n    this.mounted = false;\n  }\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n  componentDidMount() {\n    this.mounted = true;\n    const { lastCallInfo, getAvatarUrl } = this.props;\n    if (lastCallInfo && !lastCallInfo.avatarUrl && lastCallInfo.lastCallContact) {\n      getAvatarUrl(lastCallInfo.lastCallContact).then((lastCallAvatar) => {\n        if (this.mounted) {\n          this.setState({\n            lastCallAvatar,\n          });\n        }\n      });\n    }\n  }\n  render() {\n    const {\n      currentLocale,\n      timeCounter,\n      lastCallInfo,\n      currentCallTitle,\n      currentCallAvatarUrl,\n      formatPhone,\n    } = this.props;\n    if (!lastCallInfo) {\n      return null;\n    }\n    const { lastCallAvatar } = this.state;\n    const isLastCallEnded = lastCallInfo && lastCallInfo.status === sessionStatus.finished;\n    const statusClasses = classnames({\n      [styles.callee_status]: true,\n      [styles.callee_status_disconnected]: !!isLastCallEnded,\n    });\n\n    const isOnConferenCall = !!(\n      lastCallInfo && lastCallInfo.calleeType === calleeTypes.conference\n    );\n    const isContacts = !!(\n      lastCallInfo && lastCallInfo.calleeType === calleeTypes.contacts\n    );\n    const calleeName = isContacts ? lastCallInfo.name : formatPhone(lastCallInfo.phoneNumber);\n    return (\n      <div className={styles.mergeInfo}>\n        <div className={styles.merge_item}>\n          <div className={styles.callee_avatar}>\n            <CallAvatar\n              avatarUrl={isContacts && !lastCallInfo.avatarUrl\n                ? lastCallAvatar\n                : lastCallInfo.avatarUrl}\n              extraNum={isOnConferenCall ? lastCallInfo.extraNum : 0}\n              isOnConferenceCall={isOnConferenCall}\n              />\n          </div>\n          <div className={styles.callee_name}>\n            {\n                isOnConferenCall\n                ? <span title={i18n.getString('conferenceCall', currentLocale)}>{i18n.getString('conferenceCall', currentLocale)} </span>\n                : <span title={calleeName}>{calleeName}</span>\n              }\n          </div>\n          <div className={statusClasses}>\n            {lastCallInfo.status === sessionStatus.finished\n                ? i18n.getString('disconnected', currentLocale)\n                : i18n.getString('onHold', currentLocale)}\n          </div>\n        </div>\n        <div className={styles.merge_item_active}>\n          <div className={styles.callee_avatar_active} >\n            {\n                currentCallAvatarUrl\n                  ? <CallAvatar avatarUrl={currentCallAvatarUrl} />\n                  : <CallAvatar avatarUrl={null} />\n              }\n          </div>\n          <div className={styles.callee_name_active}>\n            <span title={currentCallTitle}>{currentCallTitle}</span>\n          </div>\n          <div className={styles.callee_status_active}>\n            {timeCounter}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nMergeInfo.propTypes = {\n  currentLocale: PropTypes.string.isRequired,\n  timeCounter: PropTypes.element.isRequired,\n  lastCallInfo: PropTypes.object,\n  currentCallTitle: PropTypes.string,\n  currentCallAvatarUrl: PropTypes.string,\n  formatPhone: PropTypes.func,\n  getAvatarUrl: PropTypes.func,\n};\n\nMergeInfo.defaultProps = {\n  lastCallInfo: { calleeType: calleeTypes.unknow },\n  currentCallTitle: undefined,\n  currentCallAvatarUrl: undefined,\n  formatPhone: () => null,\n  getAvatarUrl: () => null,\n};\n\nexport default MergeInfo;\n"]}